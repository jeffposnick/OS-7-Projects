{program Prime(input, output);var	j, temp, low, high:integer;function IsPrime(i: integer): boolean;var	temp: integer;begin	temp := 2;	while ((i MOD temp) <> 0) do		temp := temp + 1;	IsPrime := (i = temp);end;begin	write('Enter the lowest number: ');	readln(low);	if low < 2 then		low:=2;	write('Enter the highest number: ');	readln(high);	for j := low to high do		if IsPrime(j) then			writeln(j, 'is prime');	j := 1;	while (IsPrime(j*j+j+41)) do		j := j + 1;	writeln(j, ' works.');end.}program mastermind;uses crt, printer;const MAXSIZE=4;type BoardType=array[1.. MAXSIZE] of char;     GuessType=array[1.. MAXSIZE] of char;var board: BoardType;    guess: GuessType;    colorLoc, colorMov: integer;    count, i: integer;    quited: Boolean;procedure Title;begin    ClrScr;    writeln('MASTERMIND');end;procedure Setup(var board: BoardType);var color, i : integer;begin    for i:=1 to MAXSIZE do begin    color:=random(6);    case color of    0:board[i]:='B';    1:board[i]:='R';    2:board[i]:='Y';    3:board[i]:='G';    4:board[i]:='W';    else board[i]:= 'K';     end;    end;end;procedure GetGuess(var guess: GuessType);var i:integer;    Q : char;begin    writeln('Enter Q to quit');    writeln;    for i:=1 to 4 do begin        writeln('Enter your color ',i,' selection--> ');        readln(guess[i]);        guess[i]:=upcase(guess[i]);   end;end;procedure ShowResult(board:BoardType; guess: GuessType; var colorLoc, colorMov: integer);var    i,j : integer;begin    for i:=1 to MAXSIZE do        if (board[i]= guess[i]) then begin           colorLoc:=colorLoc+1;           board[i]:='X';           guess[i]:='O';        end;    for i:=1 to MAXSIZE do         for j:=1 to MAXSIZE do            if board[i]= guess[j] then begin               colorMov:= colorMov+1;               board[i]:='X';               guess[j]:='O';            end;    writeln(colorLoc,'/',colorMov)end;function Match(board: BoardType; guess: GuessType; colorLoc: integer): boolean;begin     match:=colorLoc=4;end;procedure Winner(count: integer);begin     writeln('You won!');     writeln(' It took', count,' guesses to win');end;procedure Loser(board: BoardType);var i: integer;begin     writeln('You lose');     writeln(' The correct sequence was ');     for i:=1 to 4 do          write(board[i]);     writeln;     end;begin   randomize;   Title;   writeln;   Setup(board);   count:=0;   repeat      quited:=false;      colorLoc:=0;      colorMov:=0;      count:=count+1;      GetGuess(guess);      ShowResult(board, guess, colorLoc, colorMov);      for i:=1 to MAXSIZE do      	if guess[i]='Q' then      		quited := true;     until ((Match(board, guess, colorLoc)=true) or (quited) or (count>=10));      if match(board, guess, colorLoc)=true then Winner(count)      else Loser(board);end.